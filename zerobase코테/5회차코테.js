// 문제 1
// 문자열에 연속한 2개의 같은 문자가 존재하지 않도록 만들고 싶습니다.
// 연속한 2개의 같은 문자가 존재한다면 이 문자를 지우고 남은 문자열을 이어붙입니다.
// 이 과정을 연속한 2개의 같은 문자가 없을 때까지 반복하면 목표한 문자열을 얻게 됩니다.
// 문자열 s가 주어질 때, 위와 같은 과정을 적용해서 나오는 문자열을 출력하는 프로그램을 구현하세요.

// 풀이
function solution(s) {
  let answer = "";
  let arr = s.split("");

  for (let i = 0; i < arr.length; i++) {
    if (arr[i] === arr[i + 1]) {
      arr.splice(i, 2);
    }
  }

  answer = arr.join("");
  return answer;
}

// 문제 2
// 총 4가지 종류의 괄호가 있습니다.
// 각 괄호들은 서로 짝이 있으며 그 짝은 괄호가 열리고 닫히는 것을 의미합니다.
// 이때 주어진 문자열 s가 괄호가 서로 교차하지 않은 형태로
// 짝이 잘 맞게 이루어진 문자열인지 판단히여 맞으면 1, 틀리면 0으로 반환하는 프로그램을 구현하세요.
// 예시1 s="(()){[<>]}" 출력 1
// 예시2 s="({)}[<]>" 출력 0

// 풀이
function solution(s) {}

// 문제 3
// s는 알파벳으로 이루어진 문자열입니다.
// 순서대로 문자열을 확인하여, 해당 문자열에서 2회 연속으로 동일한 문자가 나타나면,
// 해당 두 문자를 소거합니다.
// 소거한 뒤에 나온 문자열에서 다시 연속해서 나오는 알파벳을 소거하는 작업을 더 이상 작업할 것이 없을 때까지 반복합니다.
// 이때 최종 문자열이 완전히 소거되어 빈문자열이라면 1을 반환하고,
// 알파벳이 남아있으면 0을 반환하는 프로그램을 구현하세요.
function solution(s) {
  let answer = 0;
  let modified = true;
  while (modified) {
    modified = false;
    let i = 0;
    while (i < s.length - 1) {
      if (s[i] === s[i + 1]) {
        s = s.slice(0, i) + s.slice(i + 2);
        modified = true;
      } else {
        i++;
      }
    }
  }
  return (answer = s.length === 0 ? 1 : 0);
}

// 문제 4
// 앱 디자인을 하려고 합니다. 디자인 영역 area가 주어질 때,
// 이 영역과 일치하는 사각형의 가로 w와 세로h를 구하는 함수, solution을 완성해주세요.
// 단, 다음 조건을 만족해야 합니다.
// 세로 화면 최적화를 위해 가로는 세로보다 길 수 없습니다.
// 여러 가능한 가로, 세로 조합 중 두 값의 차이가 가장 적은 값을 찾습니다.
// 예를 들어 area가 4일때, 커버할 수 있는 가로, 세로는 다음과 같습니다.
// 가로 w가 1이고 세로 h가 4인 경우.
// 가로 w가 2이고 세로 h가 2인 경우.
// 가로 w가 4이고 세로 h가 1인 경우는 가로가 세로보다 길기 때문에 제외
// 이 중, 가로, 세로의 차이가 가장 적은 가로 w가 2, 세로 h가 2인 [2,2]를 반환합니다.

// 문제5
// 일반적으로 사용하는 수식 (A+B*C)을 중위 표기법이라는 명칭을 사용합니다.
// 후위 표기법은 연산자가 피연산자 뒤에 오는 것을 의미합니다. (ABC*+)
// 컴퓨터는 계산식을 항상 순차대로 수행하기 때문에 연산식을 변환해서 처리해야합니다.
// 컴퓨터를 위해 중위표기법을 후위표기법으로 변환하는 함수를 작성하세요.
// 단, 연산자와 피연산자 사이에 공백이 한칸씩 주어지고, 출력 결과에도 모든 연산자와 피연산자 사이에 공백이 한칸씩 존재해야합니다.
// 연산자로 사용되는 기호는'(',')','+','-','*','/'이며
// 나머지는 피연산자로 취급합니다.

function solution(S) {
  let answer = "";
  let target = "";
  arr = S.split(" ");
  for (let i = 0; i < arr.length; i++) {
    if (
      arr[i] === "(" ||
      arr[i] === ")" ||
      arr[i] === "+" ||
      arr[i] === "-" ||
      arr[i] === "*" ||
      arr[i] === "/"
    ) {
      target = arr[i];
      arr.splice(i, 1);
      arr.push(target);
    }
    arr.splice(i + 1, 0, " ");
  }
  return (answer = arr.join(""));
}
